Basic completion procedures using the Maude strategy language
-------------------------------------------------------------

	The purpose of the completion procedures is transforming a set of equations into a confluent term rewriting system, in case it is possible. Using Bachmair and Dershowitz's completion rules (completion-rules.maude), four different procedures are defined as strategies: the basic Knuth-Bendix algorithm, and the N, S, and ANS completion procedures from Pierre Lescanne's "Completion Procedures as Transition Rules + Control" (TAPSOFT'89) (10.1007/3-540-50939-9_123).

	Some examples of equational systems to be completed are included. It is enough to load the "example-*.maude" file to execute such example, by rewriting the term < eqs, mtRlS > using the strategies compl (for Knuth-Bendix completion), N-COMP, S-COMP or ANS-COMP. All the examples use Lexicographic Path Ordering (LPO) as term order and share a common structure:
	* A functional module EXX-ORDER gives the precedence of the example operator symbols, required for the LPO.
	* The view ExX defines the signature of the example as a Maude metamodule, and set the order to the LPO generated by the previous precedence. This is done by mapping the MOD and _>_ operators of the MOUDLE-AND-ORDER theory. This view is used to instantiate the completion procedures.
	* The functional module EXX defines a symbol "eqs" with the example equations.
	* The strategy module EXX-STRAT imports previous module and all the instantiated completion procedures.


Old version
-----------

	This is an improved version of that presented in "Basic completion procedures as another application of the Maude strategy language" (WRS 2011) by Alberto Verdejo and Narciso Mart√≠-Oliet (10.4204/EPTCS.82.2). The old implementation, updated with some minor improvements to the current state of the strategy language, is included in the "old" directory. The examples can alternatively be run with these procedures by suffixing "-old" to the "sload all-procedures" line in each example file. 
The old implementation uses a different inference state and rule set for each procedure. Looking for a clear separation of concerns, in the new version the procedures share all but the strategy that define how rules are applied. Note that the old procedures must be executed in their specific initial states:
	* < eqs, mtRlS > for Knuth-Bendix completion
	* < mtRlS, mtRlS, eqs > for N-Completion
	* < mtRlS, mtRlS, mtRlS, eqs > for S-Completion
	* < mtRlS, mtRlS, mtRlS, mtRlS, mtRlS, eqs > for ANS-Completion
